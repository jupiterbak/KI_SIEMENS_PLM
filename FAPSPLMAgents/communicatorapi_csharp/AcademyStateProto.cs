// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: academy_state_proto.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from academy_state_proto.proto</summary>
public static partial class AcademyStateProtoReflection {

  #region Descriptor
  /// <summary>File descriptor for academy_state_proto.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static AcademyStateProtoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChlhY2FkZW15X3N0YXRlX3Byb3RvLnByb3RvGhdicmFpbl9zdGF0ZV9wcm90",
          "by5wcm90bxoXaGFuZGxlX3R5cGVfcHJvdG8ucHJvdG8igAEKEUFjYWRlbXlT",
          "dGF0ZVByb3RvEiAKBmhhbmRsZRgEIAEoCzIQLkhhbmRsZVR5cGVQcm90bxIT",
          "CgthY2FkZW15TmFtZRgBIAEoCRISCgpicmFpbkNvdW50GAIgASgFEiAKBnN0",
          "YXRlcxgDIAMoCzIQLkJyYWluU3RhdGVQcm90b2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::BrainStateProtoReflection.Descriptor, global::HandleTypeProtoReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::AcademyStateProto), global::AcademyStateProto.Parser, new[]{ "Handle", "AcademyName", "BrainCount", "States" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class AcademyStateProto : pb::IMessage<AcademyStateProto> {
  private static readonly pb::MessageParser<AcademyStateProto> _parser = new pb::MessageParser<AcademyStateProto>(() => new AcademyStateProto());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AcademyStateProto> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AcademyStateProtoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AcademyStateProto() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AcademyStateProto(AcademyStateProto other) : this() {
    handle_ = other.handle_ != null ? other.handle_.Clone() : null;
    academyName_ = other.academyName_;
    brainCount_ = other.brainCount_;
    states_ = other.states_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AcademyStateProto Clone() {
    return new AcademyStateProto(this);
  }

  /// <summary>Field number for the "handle" field.</summary>
  public const int HandleFieldNumber = 4;
  private global::HandleTypeProto handle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::HandleTypeProto Handle {
    get { return handle_; }
    set {
      handle_ = value;
    }
  }

  /// <summary>Field number for the "academyName" field.</summary>
  public const int AcademyNameFieldNumber = 1;
  private string academyName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AcademyName {
    get { return academyName_; }
    set {
      academyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "brainCount" field.</summary>
  public const int BrainCountFieldNumber = 2;
  private int brainCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BrainCount {
    get { return brainCount_; }
    set {
      brainCount_ = value;
    }
  }

  /// <summary>Field number for the "states" field.</summary>
  public const int StatesFieldNumber = 3;
  private static readonly pb::FieldCodec<global::BrainStateProto> _repeated_states_codec
      = pb::FieldCodec.ForMessage(26, global::BrainStateProto.Parser);
  private readonly pbc::RepeatedField<global::BrainStateProto> states_ = new pbc::RepeatedField<global::BrainStateProto>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::BrainStateProto> States {
    get { return states_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AcademyStateProto);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AcademyStateProto other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Handle, other.Handle)) return false;
    if (AcademyName != other.AcademyName) return false;
    if (BrainCount != other.BrainCount) return false;
    if(!states_.Equals(other.states_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (handle_ != null) hash ^= Handle.GetHashCode();
    if (AcademyName.Length != 0) hash ^= AcademyName.GetHashCode();
    if (BrainCount != 0) hash ^= BrainCount.GetHashCode();
    hash ^= states_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AcademyName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AcademyName);
    }
    if (BrainCount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BrainCount);
    }
    states_.WriteTo(output, _repeated_states_codec);
    if (handle_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Handle);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (handle_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Handle);
    }
    if (AcademyName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AcademyName);
    }
    if (BrainCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BrainCount);
    }
    size += states_.CalculateSize(_repeated_states_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AcademyStateProto other) {
    if (other == null) {
      return;
    }
    if (other.handle_ != null) {
      if (handle_ == null) {
        handle_ = new global::HandleTypeProto();
      }
      Handle.MergeFrom(other.Handle);
    }
    if (other.AcademyName.Length != 0) {
      AcademyName = other.AcademyName;
    }
    if (other.BrainCount != 0) {
      BrainCount = other.BrainCount;
    }
    states_.Add(other.states_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          AcademyName = input.ReadString();
          break;
        }
        case 16: {
          BrainCount = input.ReadInt32();
          break;
        }
        case 26: {
          states_.AddEntriesFrom(input, _repeated_states_codec);
          break;
        }
        case 34: {
          if (handle_ == null) {
            handle_ = new global::HandleTypeProto();
          }
          input.ReadMessage(handle_);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
