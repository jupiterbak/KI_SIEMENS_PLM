// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FAPSPLMServives.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace CommunicatorObjects {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class FAPSPLMServices
  {
    static readonly string __ServiceName = "communicator_objects.FAPSPLMServices";

    static readonly grpc::Marshaller<global::AcademyConfigProto> __Marshaller_AcademyConfigProto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AcademyConfigProto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HandleTypeProto> __Marshaller_HandleTypeProto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HandleTypeProto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::AcademyStateProto> __Marshaller_AcademyStateProto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AcademyStateProto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::AcademyActionProto> __Marshaller_AcademyActionProto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AcademyActionProto.Parser.ParseFrom);

    static readonly grpc::Method<global::AcademyConfigProto, global::HandleTypeProto> __Method_FAPSAGENT_Initialize = new grpc::Method<global::AcademyConfigProto, global::HandleTypeProto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FAPSAGENT_Initialize",
        __Marshaller_AcademyConfigProto,
        __Marshaller_HandleTypeProto);

    static readonly grpc::Method<global::HandleTypeProto, global::HandleTypeProto> __Method_FAPSAGENT_Clear = new grpc::Method<global::HandleTypeProto, global::HandleTypeProto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FAPSAGENT_Clear",
        __Marshaller_HandleTypeProto,
        __Marshaller_HandleTypeProto);

    static readonly grpc::Method<global::HandleTypeProto, global::HandleTypeProto> __Method_FAPSAGENT_Start = new grpc::Method<global::HandleTypeProto, global::HandleTypeProto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FAPSAGENT_Start",
        __Marshaller_HandleTypeProto,
        __Marshaller_HandleTypeProto);

    static readonly grpc::Method<global::HandleTypeProto, global::HandleTypeProto> __Method_FAPSAGENT_Stop = new grpc::Method<global::HandleTypeProto, global::HandleTypeProto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FAPSAGENT_Stop",
        __Marshaller_HandleTypeProto,
        __Marshaller_HandleTypeProto);

    static readonly grpc::Method<global::AcademyStateProto, global::AcademyActionProto> __Method_FAPSAGENT_getAction = new grpc::Method<global::AcademyStateProto, global::AcademyActionProto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FAPSAGENT_getAction",
        __Marshaller_AcademyStateProto,
        __Marshaller_AcademyActionProto);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::CommunicatorObjects.FAPSPLMServivesReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of FAPSPLMServices</summary>
    public abstract partial class FAPSPLMServicesBase
    {
      public virtual global::System.Threading.Tasks.Task<global::HandleTypeProto> FAPSAGENT_Initialize(global::AcademyConfigProto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HandleTypeProto> FAPSAGENT_Clear(global::HandleTypeProto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HandleTypeProto> FAPSAGENT_Start(global::HandleTypeProto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HandleTypeProto> FAPSAGENT_Stop(global::HandleTypeProto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::AcademyActionProto> FAPSAGENT_getAction(global::AcademyStateProto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for FAPSPLMServices</summary>
    public partial class FAPSPLMServicesClient : grpc::ClientBase<FAPSPLMServicesClient>
    {
      /// <summary>Creates a new client for FAPSPLMServices</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public FAPSPLMServicesClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for FAPSPLMServices that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public FAPSPLMServicesClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected FAPSPLMServicesClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected FAPSPLMServicesClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::HandleTypeProto FAPSAGENT_Initialize(global::AcademyConfigProto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FAPSAGENT_Initialize(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HandleTypeProto FAPSAGENT_Initialize(global::AcademyConfigProto request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FAPSAGENT_Initialize, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HandleTypeProto> FAPSAGENT_InitializeAsync(global::AcademyConfigProto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FAPSAGENT_InitializeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HandleTypeProto> FAPSAGENT_InitializeAsync(global::AcademyConfigProto request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FAPSAGENT_Initialize, null, options, request);
      }
      public virtual global::HandleTypeProto FAPSAGENT_Clear(global::HandleTypeProto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FAPSAGENT_Clear(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HandleTypeProto FAPSAGENT_Clear(global::HandleTypeProto request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FAPSAGENT_Clear, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HandleTypeProto> FAPSAGENT_ClearAsync(global::HandleTypeProto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FAPSAGENT_ClearAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HandleTypeProto> FAPSAGENT_ClearAsync(global::HandleTypeProto request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FAPSAGENT_Clear, null, options, request);
      }
      public virtual global::HandleTypeProto FAPSAGENT_Start(global::HandleTypeProto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FAPSAGENT_Start(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HandleTypeProto FAPSAGENT_Start(global::HandleTypeProto request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FAPSAGENT_Start, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HandleTypeProto> FAPSAGENT_StartAsync(global::HandleTypeProto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FAPSAGENT_StartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HandleTypeProto> FAPSAGENT_StartAsync(global::HandleTypeProto request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FAPSAGENT_Start, null, options, request);
      }
      public virtual global::HandleTypeProto FAPSAGENT_Stop(global::HandleTypeProto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FAPSAGENT_Stop(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HandleTypeProto FAPSAGENT_Stop(global::HandleTypeProto request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FAPSAGENT_Stop, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HandleTypeProto> FAPSAGENT_StopAsync(global::HandleTypeProto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FAPSAGENT_StopAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HandleTypeProto> FAPSAGENT_StopAsync(global::HandleTypeProto request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FAPSAGENT_Stop, null, options, request);
      }
      public virtual global::AcademyActionProto FAPSAGENT_getAction(global::AcademyStateProto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FAPSAGENT_getAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::AcademyActionProto FAPSAGENT_getAction(global::AcademyStateProto request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FAPSAGENT_getAction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::AcademyActionProto> FAPSAGENT_getActionAsync(global::AcademyStateProto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FAPSAGENT_getActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::AcademyActionProto> FAPSAGENT_getActionAsync(global::AcademyStateProto request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FAPSAGENT_getAction, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override FAPSPLMServicesClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new FAPSPLMServicesClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(FAPSPLMServicesBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_FAPSAGENT_Initialize, serviceImpl.FAPSAGENT_Initialize)
          .AddMethod(__Method_FAPSAGENT_Clear, serviceImpl.FAPSAGENT_Clear)
          .AddMethod(__Method_FAPSAGENT_Start, serviceImpl.FAPSAGENT_Start)
          .AddMethod(__Method_FAPSAGENT_Stop, serviceImpl.FAPSAGENT_Stop)
          .AddMethod(__Method_FAPSAGENT_getAction, serviceImpl.FAPSAGENT_getAction).Build();
    }

  }
}
#endregion
