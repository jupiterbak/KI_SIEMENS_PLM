// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brain_parameter_proto.proto

#include "brain_parameter_proto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class BrainParametersProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BrainParametersProto>
      _instance;
} _BrainParametersProto_default_instance_;
namespace protobuf_brain_5fparameter_5fproto_2eproto {
static void InitDefaultsBrainParametersProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_BrainParametersProto_default_instance_;
    new (ptr) ::BrainParametersProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BrainParametersProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BrainParametersProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBrainParametersProto}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BrainParametersProto.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BrainParametersProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BrainParametersProto, statesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BrainParametersProto, actionsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BrainParametersProto, observationsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BrainParametersProto, memorysize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BrainParametersProto, cameraresolutions_h_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BrainParametersProto, cameraresolutions_w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BrainParametersProto, actiondescriptions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BrainParametersProto, statespacedescriptions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BrainParametersProto, actionspacetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BrainParametersProto, statespacetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BrainParametersProto, brainname_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::BrainParametersProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BrainParametersProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "brain_parameter_proto.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033brain_parameter_proto.proto\032\027action_ty"
      "pe_proto.proto\032\026space_type_proto.proto\"\307"
      "\002\n\024BrainParametersProto\022\021\n\tstateSize\030\001 \001"
      "(\005\022\022\n\nactionSize\030\002 \001(\005\022\027\n\017observationSiz"
      "e\030\003 \001(\005\022\022\n\nmemorySize\030\004 \001(\005\022\033\n\023cameraRes"
      "olutions_H\030\005 \001(\005\022\033\n\023cameraResolutions_W\030"
      "\006 \001(\005\022\032\n\022actionDescriptions\030\007 \003(\t\022\036\n\026sta"
      "teSpaceDescriptions\030\010 \003(\t\022)\n\017actionSpace"
      "Type\030\t \001(\0162\020.ActionTypeProto\022\'\n\016stateSpa"
      "ceType\030\n \001(\0162\017.SpaceTypeProto\022\021\n\tbrainNa"
      "me\030\013 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 416);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "brain_parameter_proto.proto", &protobuf_RegisterTypes);
  ::protobuf_action_5ftype_5fproto_2eproto::AddDescriptors();
  ::protobuf_space_5ftype_5fproto_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_brain_5fparameter_5fproto_2eproto

// ===================================================================

void BrainParametersProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BrainParametersProto::kStateSizeFieldNumber;
const int BrainParametersProto::kActionSizeFieldNumber;
const int BrainParametersProto::kObservationSizeFieldNumber;
const int BrainParametersProto::kMemorySizeFieldNumber;
const int BrainParametersProto::kCameraResolutionsHFieldNumber;
const int BrainParametersProto::kCameraResolutionsWFieldNumber;
const int BrainParametersProto::kActionDescriptionsFieldNumber;
const int BrainParametersProto::kStateSpaceDescriptionsFieldNumber;
const int BrainParametersProto::kActionSpaceTypeFieldNumber;
const int BrainParametersProto::kStateSpaceTypeFieldNumber;
const int BrainParametersProto::kBrainNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BrainParametersProto::BrainParametersProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_brain_5fparameter_5fproto_2eproto::scc_info_BrainParametersProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BrainParametersProto)
}
BrainParametersProto::BrainParametersProto(const BrainParametersProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      actiondescriptions_(from.actiondescriptions_),
      statespacedescriptions_(from.statespacedescriptions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  brainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.brainname().size() > 0) {
    brainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brainname_);
  }
  ::memcpy(&statesize_, &from.statesize_,
    static_cast<size_t>(reinterpret_cast<char*>(&statespacetype_) -
    reinterpret_cast<char*>(&statesize_)) + sizeof(statespacetype_));
  // @@protoc_insertion_point(copy_constructor:BrainParametersProto)
}

void BrainParametersProto::SharedCtor() {
  brainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&statesize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&statespacetype_) -
      reinterpret_cast<char*>(&statesize_)) + sizeof(statespacetype_));
}

BrainParametersProto::~BrainParametersProto() {
  // @@protoc_insertion_point(destructor:BrainParametersProto)
  SharedDtor();
}

void BrainParametersProto::SharedDtor() {
  brainname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BrainParametersProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BrainParametersProto::descriptor() {
  ::protobuf_brain_5fparameter_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brain_5fparameter_5fproto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BrainParametersProto& BrainParametersProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_brain_5fparameter_5fproto_2eproto::scc_info_BrainParametersProto.base);
  return *internal_default_instance();
}


void BrainParametersProto::Clear() {
// @@protoc_insertion_point(message_clear_start:BrainParametersProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actiondescriptions_.Clear();
  statespacedescriptions_.Clear();
  brainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&statesize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&statespacetype_) -
      reinterpret_cast<char*>(&statesize_)) + sizeof(statespacetype_));
  _internal_metadata_.Clear();
}

bool BrainParametersProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BrainParametersProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 stateSize = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &statesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 actionSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actionsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 observationSize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &observationsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 memorySize = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &memorysize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cameraResolutions_H = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cameraresolutions_h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cameraResolutions_W = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cameraresolutions_w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string actionDescriptions = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_actiondescriptions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->actiondescriptions(this->actiondescriptions_size() - 1).data(),
            static_cast<int>(this->actiondescriptions(this->actiondescriptions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BrainParametersProto.actionDescriptions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string stateSpaceDescriptions = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_statespacedescriptions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->statespacedescriptions(this->statespacedescriptions_size() - 1).data(),
            static_cast<int>(this->statespacedescriptions(this->statespacedescriptions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BrainParametersProto.stateSpaceDescriptions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ActionTypeProto actionSpaceType = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_actionspacetype(static_cast< ::ActionTypeProto >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SpaceTypeProto stateSpaceType = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_statespacetype(static_cast< ::SpaceTypeProto >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string brainName = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brainname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brainname().data(), static_cast<int>(this->brainname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BrainParametersProto.brainName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BrainParametersProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BrainParametersProto)
  return false;
#undef DO_
}

void BrainParametersProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BrainParametersProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 stateSize = 1;
  if (this->statesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->statesize(), output);
  }

  // int32 actionSize = 2;
  if (this->actionsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->actionsize(), output);
  }

  // int32 observationSize = 3;
  if (this->observationsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->observationsize(), output);
  }

  // int32 memorySize = 4;
  if (this->memorysize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->memorysize(), output);
  }

  // int32 cameraResolutions_H = 5;
  if (this->cameraresolutions_h() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cameraresolutions_h(), output);
  }

  // int32 cameraResolutions_W = 6;
  if (this->cameraresolutions_w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cameraresolutions_w(), output);
  }

  // repeated string actionDescriptions = 7;
  for (int i = 0, n = this->actiondescriptions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actiondescriptions(i).data(), static_cast<int>(this->actiondescriptions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BrainParametersProto.actionDescriptions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->actiondescriptions(i), output);
  }

  // repeated string stateSpaceDescriptions = 8;
  for (int i = 0, n = this->statespacedescriptions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->statespacedescriptions(i).data(), static_cast<int>(this->statespacedescriptions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BrainParametersProto.stateSpaceDescriptions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->statespacedescriptions(i), output);
  }

  // .ActionTypeProto actionSpaceType = 9;
  if (this->actionspacetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->actionspacetype(), output);
  }

  // .SpaceTypeProto stateSpaceType = 10;
  if (this->statespacetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->statespacetype(), output);
  }

  // string brainName = 11;
  if (this->brainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brainname().data(), static_cast<int>(this->brainname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BrainParametersProto.brainName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->brainname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BrainParametersProto)
}

::google::protobuf::uint8* BrainParametersProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BrainParametersProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 stateSize = 1;
  if (this->statesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->statesize(), target);
  }

  // int32 actionSize = 2;
  if (this->actionsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->actionsize(), target);
  }

  // int32 observationSize = 3;
  if (this->observationsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->observationsize(), target);
  }

  // int32 memorySize = 4;
  if (this->memorysize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->memorysize(), target);
  }

  // int32 cameraResolutions_H = 5;
  if (this->cameraresolutions_h() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cameraresolutions_h(), target);
  }

  // int32 cameraResolutions_W = 6;
  if (this->cameraresolutions_w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cameraresolutions_w(), target);
  }

  // repeated string actionDescriptions = 7;
  for (int i = 0, n = this->actiondescriptions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actiondescriptions(i).data(), static_cast<int>(this->actiondescriptions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BrainParametersProto.actionDescriptions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->actiondescriptions(i), target);
  }

  // repeated string stateSpaceDescriptions = 8;
  for (int i = 0, n = this->statespacedescriptions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->statespacedescriptions(i).data(), static_cast<int>(this->statespacedescriptions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BrainParametersProto.stateSpaceDescriptions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->statespacedescriptions(i), target);
  }

  // .ActionTypeProto actionSpaceType = 9;
  if (this->actionspacetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->actionspacetype(), target);
  }

  // .SpaceTypeProto stateSpaceType = 10;
  if (this->statespacetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->statespacetype(), target);
  }

  // string brainName = 11;
  if (this->brainname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brainname().data(), static_cast<int>(this->brainname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BrainParametersProto.brainName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->brainname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BrainParametersProto)
  return target;
}

size_t BrainParametersProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BrainParametersProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string actionDescriptions = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->actiondescriptions_size());
  for (int i = 0, n = this->actiondescriptions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->actiondescriptions(i));
  }

  // repeated string stateSpaceDescriptions = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->statespacedescriptions_size());
  for (int i = 0, n = this->statespacedescriptions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->statespacedescriptions(i));
  }

  // string brainName = 11;
  if (this->brainname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brainname());
  }

  // int32 stateSize = 1;
  if (this->statesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->statesize());
  }

  // int32 actionSize = 2;
  if (this->actionsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actionsize());
  }

  // int32 observationSize = 3;
  if (this->observationsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->observationsize());
  }

  // int32 memorySize = 4;
  if (this->memorysize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->memorysize());
  }

  // int32 cameraResolutions_H = 5;
  if (this->cameraresolutions_h() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cameraresolutions_h());
  }

  // int32 cameraResolutions_W = 6;
  if (this->cameraresolutions_w() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cameraresolutions_w());
  }

  // .ActionTypeProto actionSpaceType = 9;
  if (this->actionspacetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->actionspacetype());
  }

  // .SpaceTypeProto stateSpaceType = 10;
  if (this->statespacetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->statespacetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BrainParametersProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BrainParametersProto)
  GOOGLE_DCHECK_NE(&from, this);
  const BrainParametersProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BrainParametersProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BrainParametersProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BrainParametersProto)
    MergeFrom(*source);
  }
}

void BrainParametersProto::MergeFrom(const BrainParametersProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BrainParametersProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actiondescriptions_.MergeFrom(from.actiondescriptions_);
  statespacedescriptions_.MergeFrom(from.statespacedescriptions_);
  if (from.brainname().size() > 0) {

    brainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brainname_);
  }
  if (from.statesize() != 0) {
    set_statesize(from.statesize());
  }
  if (from.actionsize() != 0) {
    set_actionsize(from.actionsize());
  }
  if (from.observationsize() != 0) {
    set_observationsize(from.observationsize());
  }
  if (from.memorysize() != 0) {
    set_memorysize(from.memorysize());
  }
  if (from.cameraresolutions_h() != 0) {
    set_cameraresolutions_h(from.cameraresolutions_h());
  }
  if (from.cameraresolutions_w() != 0) {
    set_cameraresolutions_w(from.cameraresolutions_w());
  }
  if (from.actionspacetype() != 0) {
    set_actionspacetype(from.actionspacetype());
  }
  if (from.statespacetype() != 0) {
    set_statespacetype(from.statespacetype());
  }
}

void BrainParametersProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BrainParametersProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BrainParametersProto::CopyFrom(const BrainParametersProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BrainParametersProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BrainParametersProto::IsInitialized() const {
  return true;
}

void BrainParametersProto::Swap(BrainParametersProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BrainParametersProto::InternalSwap(BrainParametersProto* other) {
  using std::swap;
  actiondescriptions_.InternalSwap(CastToBase(&other->actiondescriptions_));
  statespacedescriptions_.InternalSwap(CastToBase(&other->statespacedescriptions_));
  brainname_.Swap(&other->brainname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(statesize_, other->statesize_);
  swap(actionsize_, other->actionsize_);
  swap(observationsize_, other->observationsize_);
  swap(memorysize_, other->memorysize_);
  swap(cameraresolutions_h_, other->cameraresolutions_h_);
  swap(cameraresolutions_w_, other->cameraresolutions_w_);
  swap(actionspacetype_, other->actionspacetype_);
  swap(statespacetype_, other->statespacetype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BrainParametersProto::GetMetadata() const {
  protobuf_brain_5fparameter_5fproto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_brain_5fparameter_5fproto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BrainParametersProto* Arena::CreateMaybeMessage< ::BrainParametersProto >(Arena* arena) {
  return Arena::CreateInternal< ::BrainParametersProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
