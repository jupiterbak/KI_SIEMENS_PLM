// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brain_parameter_proto.proto

#ifndef PROTOBUF_INCLUDED_brain_5fparameter_5fproto_2eproto
#define PROTOBUF_INCLUDED_brain_5fparameter_5fproto_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "action_type_proto.pb.h"
#include "space_type_proto.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_brain_5fparameter_5fproto_2eproto 

namespace protobuf_brain_5fparameter_5fproto_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_brain_5fparameter_5fproto_2eproto
class BrainParametersProto;
class BrainParametersProtoDefaultTypeInternal;
extern BrainParametersProtoDefaultTypeInternal _BrainParametersProto_default_instance_;
namespace google {
namespace protobuf {
template<> ::BrainParametersProto* Arena::CreateMaybeMessage<::BrainParametersProto>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class BrainParametersProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BrainParametersProto) */ {
 public:
  BrainParametersProto();
  virtual ~BrainParametersProto();

  BrainParametersProto(const BrainParametersProto& from);

  inline BrainParametersProto& operator=(const BrainParametersProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BrainParametersProto(BrainParametersProto&& from) noexcept
    : BrainParametersProto() {
    *this = ::std::move(from);
  }

  inline BrainParametersProto& operator=(BrainParametersProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrainParametersProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BrainParametersProto* internal_default_instance() {
    return reinterpret_cast<const BrainParametersProto*>(
               &_BrainParametersProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(BrainParametersProto* other);
  friend void swap(BrainParametersProto& a, BrainParametersProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BrainParametersProto* New() const final {
    return CreateMaybeMessage<BrainParametersProto>(NULL);
  }

  BrainParametersProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BrainParametersProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BrainParametersProto& from);
  void MergeFrom(const BrainParametersProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BrainParametersProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string actionDescriptions = 7;
  int actiondescriptions_size() const;
  void clear_actiondescriptions();
  static const int kActionDescriptionsFieldNumber = 7;
  const ::std::string& actiondescriptions(int index) const;
  ::std::string* mutable_actiondescriptions(int index);
  void set_actiondescriptions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_actiondescriptions(int index, ::std::string&& value);
  #endif
  void set_actiondescriptions(int index, const char* value);
  void set_actiondescriptions(int index, const char* value, size_t size);
  ::std::string* add_actiondescriptions();
  void add_actiondescriptions(const ::std::string& value);
  #if LANG_CXX11
  void add_actiondescriptions(::std::string&& value);
  #endif
  void add_actiondescriptions(const char* value);
  void add_actiondescriptions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& actiondescriptions() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_actiondescriptions();

  // repeated string stateSpaceDescriptions = 8;
  int statespacedescriptions_size() const;
  void clear_statespacedescriptions();
  static const int kStateSpaceDescriptionsFieldNumber = 8;
  const ::std::string& statespacedescriptions(int index) const;
  ::std::string* mutable_statespacedescriptions(int index);
  void set_statespacedescriptions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_statespacedescriptions(int index, ::std::string&& value);
  #endif
  void set_statespacedescriptions(int index, const char* value);
  void set_statespacedescriptions(int index, const char* value, size_t size);
  ::std::string* add_statespacedescriptions();
  void add_statespacedescriptions(const ::std::string& value);
  #if LANG_CXX11
  void add_statespacedescriptions(::std::string&& value);
  #endif
  void add_statespacedescriptions(const char* value);
  void add_statespacedescriptions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& statespacedescriptions() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_statespacedescriptions();

  // string brainName = 11;
  void clear_brainname();
  static const int kBrainNameFieldNumber = 11;
  const ::std::string& brainname() const;
  void set_brainname(const ::std::string& value);
  #if LANG_CXX11
  void set_brainname(::std::string&& value);
  #endif
  void set_brainname(const char* value);
  void set_brainname(const char* value, size_t size);
  ::std::string* mutable_brainname();
  ::std::string* release_brainname();
  void set_allocated_brainname(::std::string* brainname);

  // int32 stateSize = 1;
  void clear_statesize();
  static const int kStateSizeFieldNumber = 1;
  ::google::protobuf::int32 statesize() const;
  void set_statesize(::google::protobuf::int32 value);

  // int32 actionSize = 2;
  void clear_actionsize();
  static const int kActionSizeFieldNumber = 2;
  ::google::protobuf::int32 actionsize() const;
  void set_actionsize(::google::protobuf::int32 value);

  // int32 observationSize = 3;
  void clear_observationsize();
  static const int kObservationSizeFieldNumber = 3;
  ::google::protobuf::int32 observationsize() const;
  void set_observationsize(::google::protobuf::int32 value);

  // int32 memorySize = 4;
  void clear_memorysize();
  static const int kMemorySizeFieldNumber = 4;
  ::google::protobuf::int32 memorysize() const;
  void set_memorysize(::google::protobuf::int32 value);

  // int32 cameraResolutions_H = 5;
  void clear_cameraresolutions_h();
  static const int kCameraResolutionsHFieldNumber = 5;
  ::google::protobuf::int32 cameraresolutions_h() const;
  void set_cameraresolutions_h(::google::protobuf::int32 value);

  // int32 cameraResolutions_W = 6;
  void clear_cameraresolutions_w();
  static const int kCameraResolutionsWFieldNumber = 6;
  ::google::protobuf::int32 cameraresolutions_w() const;
  void set_cameraresolutions_w(::google::protobuf::int32 value);

  // .ActionTypeProto actionSpaceType = 9;
  void clear_actionspacetype();
  static const int kActionSpaceTypeFieldNumber = 9;
  ::ActionTypeProto actionspacetype() const;
  void set_actionspacetype(::ActionTypeProto value);

  // .SpaceTypeProto stateSpaceType = 10;
  void clear_statespacetype();
  static const int kStateSpaceTypeFieldNumber = 10;
  ::SpaceTypeProto statespacetype() const;
  void set_statespacetype(::SpaceTypeProto value);

  // @@protoc_insertion_point(class_scope:BrainParametersProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> actiondescriptions_;
  ::google::protobuf::RepeatedPtrField< ::std::string> statespacedescriptions_;
  ::google::protobuf::internal::ArenaStringPtr brainname_;
  ::google::protobuf::int32 statesize_;
  ::google::protobuf::int32 actionsize_;
  ::google::protobuf::int32 observationsize_;
  ::google::protobuf::int32 memorysize_;
  ::google::protobuf::int32 cameraresolutions_h_;
  ::google::protobuf::int32 cameraresolutions_w_;
  int actionspacetype_;
  int statespacetype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_brain_5fparameter_5fproto_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BrainParametersProto

// int32 stateSize = 1;
inline void BrainParametersProto::clear_statesize() {
  statesize_ = 0;
}
inline ::google::protobuf::int32 BrainParametersProto::statesize() const {
  // @@protoc_insertion_point(field_get:BrainParametersProto.stateSize)
  return statesize_;
}
inline void BrainParametersProto::set_statesize(::google::protobuf::int32 value) {
  
  statesize_ = value;
  // @@protoc_insertion_point(field_set:BrainParametersProto.stateSize)
}

// int32 actionSize = 2;
inline void BrainParametersProto::clear_actionsize() {
  actionsize_ = 0;
}
inline ::google::protobuf::int32 BrainParametersProto::actionsize() const {
  // @@protoc_insertion_point(field_get:BrainParametersProto.actionSize)
  return actionsize_;
}
inline void BrainParametersProto::set_actionsize(::google::protobuf::int32 value) {
  
  actionsize_ = value;
  // @@protoc_insertion_point(field_set:BrainParametersProto.actionSize)
}

// int32 observationSize = 3;
inline void BrainParametersProto::clear_observationsize() {
  observationsize_ = 0;
}
inline ::google::protobuf::int32 BrainParametersProto::observationsize() const {
  // @@protoc_insertion_point(field_get:BrainParametersProto.observationSize)
  return observationsize_;
}
inline void BrainParametersProto::set_observationsize(::google::protobuf::int32 value) {
  
  observationsize_ = value;
  // @@protoc_insertion_point(field_set:BrainParametersProto.observationSize)
}

// int32 memorySize = 4;
inline void BrainParametersProto::clear_memorysize() {
  memorysize_ = 0;
}
inline ::google::protobuf::int32 BrainParametersProto::memorysize() const {
  // @@protoc_insertion_point(field_get:BrainParametersProto.memorySize)
  return memorysize_;
}
inline void BrainParametersProto::set_memorysize(::google::protobuf::int32 value) {
  
  memorysize_ = value;
  // @@protoc_insertion_point(field_set:BrainParametersProto.memorySize)
}

// int32 cameraResolutions_H = 5;
inline void BrainParametersProto::clear_cameraresolutions_h() {
  cameraresolutions_h_ = 0;
}
inline ::google::protobuf::int32 BrainParametersProto::cameraresolutions_h() const {
  // @@protoc_insertion_point(field_get:BrainParametersProto.cameraResolutions_H)
  return cameraresolutions_h_;
}
inline void BrainParametersProto::set_cameraresolutions_h(::google::protobuf::int32 value) {
  
  cameraresolutions_h_ = value;
  // @@protoc_insertion_point(field_set:BrainParametersProto.cameraResolutions_H)
}

// int32 cameraResolutions_W = 6;
inline void BrainParametersProto::clear_cameraresolutions_w() {
  cameraresolutions_w_ = 0;
}
inline ::google::protobuf::int32 BrainParametersProto::cameraresolutions_w() const {
  // @@protoc_insertion_point(field_get:BrainParametersProto.cameraResolutions_W)
  return cameraresolutions_w_;
}
inline void BrainParametersProto::set_cameraresolutions_w(::google::protobuf::int32 value) {
  
  cameraresolutions_w_ = value;
  // @@protoc_insertion_point(field_set:BrainParametersProto.cameraResolutions_W)
}

// repeated string actionDescriptions = 7;
inline int BrainParametersProto::actiondescriptions_size() const {
  return actiondescriptions_.size();
}
inline void BrainParametersProto::clear_actiondescriptions() {
  actiondescriptions_.Clear();
}
inline const ::std::string& BrainParametersProto::actiondescriptions(int index) const {
  // @@protoc_insertion_point(field_get:BrainParametersProto.actionDescriptions)
  return actiondescriptions_.Get(index);
}
inline ::std::string* BrainParametersProto::mutable_actiondescriptions(int index) {
  // @@protoc_insertion_point(field_mutable:BrainParametersProto.actionDescriptions)
  return actiondescriptions_.Mutable(index);
}
inline void BrainParametersProto::set_actiondescriptions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BrainParametersProto.actionDescriptions)
  actiondescriptions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BrainParametersProto::set_actiondescriptions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:BrainParametersProto.actionDescriptions)
  actiondescriptions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BrainParametersProto::set_actiondescriptions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  actiondescriptions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BrainParametersProto.actionDescriptions)
}
inline void BrainParametersProto::set_actiondescriptions(int index, const char* value, size_t size) {
  actiondescriptions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BrainParametersProto.actionDescriptions)
}
inline ::std::string* BrainParametersProto::add_actiondescriptions() {
  // @@protoc_insertion_point(field_add_mutable:BrainParametersProto.actionDescriptions)
  return actiondescriptions_.Add();
}
inline void BrainParametersProto::add_actiondescriptions(const ::std::string& value) {
  actiondescriptions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BrainParametersProto.actionDescriptions)
}
#if LANG_CXX11
inline void BrainParametersProto::add_actiondescriptions(::std::string&& value) {
  actiondescriptions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:BrainParametersProto.actionDescriptions)
}
#endif
inline void BrainParametersProto::add_actiondescriptions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  actiondescriptions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BrainParametersProto.actionDescriptions)
}
inline void BrainParametersProto::add_actiondescriptions(const char* value, size_t size) {
  actiondescriptions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BrainParametersProto.actionDescriptions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BrainParametersProto::actiondescriptions() const {
  // @@protoc_insertion_point(field_list:BrainParametersProto.actionDescriptions)
  return actiondescriptions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BrainParametersProto::mutable_actiondescriptions() {
  // @@protoc_insertion_point(field_mutable_list:BrainParametersProto.actionDescriptions)
  return &actiondescriptions_;
}

// repeated string stateSpaceDescriptions = 8;
inline int BrainParametersProto::statespacedescriptions_size() const {
  return statespacedescriptions_.size();
}
inline void BrainParametersProto::clear_statespacedescriptions() {
  statespacedescriptions_.Clear();
}
inline const ::std::string& BrainParametersProto::statespacedescriptions(int index) const {
  // @@protoc_insertion_point(field_get:BrainParametersProto.stateSpaceDescriptions)
  return statespacedescriptions_.Get(index);
}
inline ::std::string* BrainParametersProto::mutable_statespacedescriptions(int index) {
  // @@protoc_insertion_point(field_mutable:BrainParametersProto.stateSpaceDescriptions)
  return statespacedescriptions_.Mutable(index);
}
inline void BrainParametersProto::set_statespacedescriptions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BrainParametersProto.stateSpaceDescriptions)
  statespacedescriptions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BrainParametersProto::set_statespacedescriptions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:BrainParametersProto.stateSpaceDescriptions)
  statespacedescriptions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BrainParametersProto::set_statespacedescriptions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  statespacedescriptions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BrainParametersProto.stateSpaceDescriptions)
}
inline void BrainParametersProto::set_statespacedescriptions(int index, const char* value, size_t size) {
  statespacedescriptions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BrainParametersProto.stateSpaceDescriptions)
}
inline ::std::string* BrainParametersProto::add_statespacedescriptions() {
  // @@protoc_insertion_point(field_add_mutable:BrainParametersProto.stateSpaceDescriptions)
  return statespacedescriptions_.Add();
}
inline void BrainParametersProto::add_statespacedescriptions(const ::std::string& value) {
  statespacedescriptions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BrainParametersProto.stateSpaceDescriptions)
}
#if LANG_CXX11
inline void BrainParametersProto::add_statespacedescriptions(::std::string&& value) {
  statespacedescriptions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:BrainParametersProto.stateSpaceDescriptions)
}
#endif
inline void BrainParametersProto::add_statespacedescriptions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  statespacedescriptions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BrainParametersProto.stateSpaceDescriptions)
}
inline void BrainParametersProto::add_statespacedescriptions(const char* value, size_t size) {
  statespacedescriptions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BrainParametersProto.stateSpaceDescriptions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BrainParametersProto::statespacedescriptions() const {
  // @@protoc_insertion_point(field_list:BrainParametersProto.stateSpaceDescriptions)
  return statespacedescriptions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BrainParametersProto::mutable_statespacedescriptions() {
  // @@protoc_insertion_point(field_mutable_list:BrainParametersProto.stateSpaceDescriptions)
  return &statespacedescriptions_;
}

// .ActionTypeProto actionSpaceType = 9;
inline void BrainParametersProto::clear_actionspacetype() {
  actionspacetype_ = 0;
}
inline ::ActionTypeProto BrainParametersProto::actionspacetype() const {
  // @@protoc_insertion_point(field_get:BrainParametersProto.actionSpaceType)
  return static_cast< ::ActionTypeProto >(actionspacetype_);
}
inline void BrainParametersProto::set_actionspacetype(::ActionTypeProto value) {
  
  actionspacetype_ = value;
  // @@protoc_insertion_point(field_set:BrainParametersProto.actionSpaceType)
}

// .SpaceTypeProto stateSpaceType = 10;
inline void BrainParametersProto::clear_statespacetype() {
  statespacetype_ = 0;
}
inline ::SpaceTypeProto BrainParametersProto::statespacetype() const {
  // @@protoc_insertion_point(field_get:BrainParametersProto.stateSpaceType)
  return static_cast< ::SpaceTypeProto >(statespacetype_);
}
inline void BrainParametersProto::set_statespacetype(::SpaceTypeProto value) {
  
  statespacetype_ = value;
  // @@protoc_insertion_point(field_set:BrainParametersProto.stateSpaceType)
}

// string brainName = 11;
inline void BrainParametersProto::clear_brainname() {
  brainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BrainParametersProto::brainname() const {
  // @@protoc_insertion_point(field_get:BrainParametersProto.brainName)
  return brainname_.GetNoArena();
}
inline void BrainParametersProto::set_brainname(const ::std::string& value) {
  
  brainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BrainParametersProto.brainName)
}
#if LANG_CXX11
inline void BrainParametersProto::set_brainname(::std::string&& value) {
  
  brainname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BrainParametersProto.brainName)
}
#endif
inline void BrainParametersProto::set_brainname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  brainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BrainParametersProto.brainName)
}
inline void BrainParametersProto::set_brainname(const char* value, size_t size) {
  
  brainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BrainParametersProto.brainName)
}
inline ::std::string* BrainParametersProto::mutable_brainname() {
  
  // @@protoc_insertion_point(field_mutable:BrainParametersProto.brainName)
  return brainname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BrainParametersProto::release_brainname() {
  // @@protoc_insertion_point(field_release:BrainParametersProto.brainName)
  
  return brainname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BrainParametersProto::set_allocated_brainname(::std::string* brainname) {
  if (brainname != NULL) {
    
  } else {
    
  }
  brainname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brainname);
  // @@protoc_insertion_point(field_set_allocated:BrainParametersProto.brainName)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_brain_5fparameter_5fproto_2eproto
